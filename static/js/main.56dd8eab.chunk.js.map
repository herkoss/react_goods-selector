{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","selectGood","good","setState","prevState","deleteGood","allGoods","splice","indexOf","clearGoods","title","goods","length","result","slice","join","className","this","onClick","map","key","classNames","selected","includes","unselected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA6EaC,E,4MAzEbC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAAAC,GAAI,OACf,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIlDG,WAAa,SAAAH,GAAI,OACf,EAAKC,UAAS,SAAAC,GACZ,IAAME,EAAQ,YAAOF,EAAUJ,eAE/B,OADAM,EAASC,OAAOD,EAASE,QAAQN,GAAO,GACjC,CACLF,cAAc,YAAKM,Q,EAIzBG,WAAa,kBAAM,EAAKN,SAAS,CAAEH,cAAe,M,EAElDU,MAAQ,SAAAC,GACN,GAAqB,IAAjBA,EAAMC,OACR,OAAO,mDACF,GAAqB,IAAjBD,EAAMC,OACf,OAAO,8BAAOD,EAAM,GAAK,gBAEzB,IAAIE,EAASF,EAAMG,MAAM,EAAGH,EAAMC,OAAS,GAAGG,KAAK,MACnD,OAAO,8BAAOF,EAAS,QAAUF,EAAMA,EAAMC,OAAS,K,4CAI1D,WAAU,IAAD,OACP,OACE,yBAAKI,UAAU,OACb,4BACGC,KAAKP,MAAMO,KAAKlB,MAAMC,eACc,IAApCiB,KAAKlB,MAAMC,cAAcY,QACxB,4BAAQM,QAASD,KAAKR,YAAtB,MAGJ,8BAAOZ,EAAgBe,QACvB,4BACGf,EAAgBsB,KAAI,SAAAjB,GAAI,OACvB,wBACEkB,IAAKlB,EACLc,UAAWK,IAAW,CACpBC,SAAU,EAAKvB,MAAMC,cAAcuB,SAASrB,GAC5CsB,YAAa,EAAKzB,MAAMC,cAAcuB,SAASrB,MAEhDA,EACA,EAAKH,MAAMC,cAAcuB,SAASrB,GACjC,4BACEc,UAAU,SACVE,QAAS,kBAAM,EAAKb,WAAWH,KAFjC,UAMA,4BACEc,UAAU,SACVE,QAAS,kBAAM,EAAKjB,WAAWC,KAFjC,oB,GA5DEuB,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.56dd8eab.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectGood = good =>\n    this.setState(prevState => {\n      return {\n        selectedGoods: [...prevState.selectedGoods, good],\n      };\n    });\n\n  deleteGood = good =>\n    this.setState(prevState => {\n      const allGoods = [...prevState.selectedGoods];\n      allGoods.splice(allGoods.indexOf(good), 1);\n      return {\n        selectedGoods: [...allGoods],\n      };\n    });\n\n  clearGoods = () => this.setState({ selectedGoods: [] });\n\n  title = goods => {\n    if (goods.length === 0) {\n      return <span>No goods selected</span>;\n    } else if (goods.length === 1) {\n      return <span>{goods[0] + ' is selected'}</span>;\n    } else {\n      let result = goods.slice(0, goods.length - 1).join(', ');\n      return <span>{result + ' and ' + goods[goods.length - 1]}</span>;\n    }\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <h1>\n          {this.title(this.state.selectedGoods)}\n          {this.state.selectedGoods.length !== 0 && (\n            <button onClick={this.clearGoods}>X</button>\n          )}\n        </h1>\n        <span>{goodsFromServer.length}</span>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className={classNames({\n                selected: this.state.selectedGoods.includes(good),\n                unselected: !this.state.selectedGoods.includes(good),\n              })}>\n              {good}\n              {this.state.selectedGoods.includes(good) ? (\n                <button\n                  className='remove'\n                  onClick={() => this.deleteGood(good)}>\n                  Remove\n                </button>\n              ) : (\n                <button\n                  className='select'\n                  onClick={() => this.selectGood(good)}>\n                  Select\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}